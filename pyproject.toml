[tool.poetry]
name = "item_synchronizer"
version = "1.1.5"
description = "Synchronize items bi-directionally between two different sources"
authors = ["Nikos Koukis <nickkouk@gmail.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/bergercookie/item_synchronizer"
repository = "https://github.com/bergercookie/item_synchronizer"
include = ["item_synchronizer/py.typed"]
classifiers = [
  "Framework :: Pytest",
  "License :: OSI Approved :: MIT License",
  "Natural Language :: English",
  "Operating System :: Unix",
  "Operating System :: Unix",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Topic :: Utilities",
]

# end-user dependencies --------------------------------------------------------
[tool.poetry.dependencies]
python = "^3.8"
bidict = "^0.21.4"
bubop = { version = ">=0.1.8 <0.2", allow-prereleases = true }

# dev dependencies -------------------------------------------------------------
[tool.poetry.dev-dependencies]
black = { version = "22.3.0", allow-prereleases = true }
identify = "^2.4.0"
isort = "^5.10.1"
mock = "*"
mypy = "*"
pdbpp = "^0.10.3"
pre-commit = "^2.16.0"
pyfakefs = "^4.5.3"
pylint = "^2.12.2"
pyright = "*"
pytest = "*"
types-PyYAML = "^5.4.1"
types-python-dateutil = "^2.8.3"
coveralls = "^3.3.1"
coverage = "^6.2"
pycln = "^1.3.1"
check-jsonschema = "^0.14.3"
# isort ------------------------------------------------------------------------
[tool.isort]
line_length = 95
include_trailing_comma = true
multi_line_output = 3
profile = "black"

# black ------------------------------------------------------------------------
[tool.black]
preview = true
line-length = 95
target-version = ['py38', 'py39']
include = '\.pyi?$'

# mypy -------------------------------------------------------------------------
[tool.mypy]
warn_return_any = true
warn_unused_configs = true
no_implicit_reexport = false

[[tool.mypy.overrides]]
module = ["tqdm", "pytest", "pexpect"]
ignore_missing_imports = true

# pylint -----------------------------------------------------------------------
[tool.pylint]
[tool.pylint.master]
persistent = "yes"
suggestion-mode = "yes"
unsafe-load-any-extension = "no"
ignore = "VCS"

[tool.pylint.messages_control]
disable = "C0330,C0326,C0103,W0613,R0201,R1720,R1705,W0104,C0301"

[tool.pylint.refactoring]
max-nested-blocks = 5
never-returning-functions = "sys.exit,argparse.parse_error"

[tool.pylint.similarities]
ignore-comments = "yes"
ignore-docstrings = "no"
ignore-imports = "yes"
# ignore-signatures=no
min-similarity-lines = 4

[tool.pylint.format]
max-line-length = 95
ignore-invalid-name = true
max-module-lines = 500

[tool.pylint.string]
check-quote-consistency = "yes"

# pyright ----------------------------------------------------------------------
[tool.pyright]
reportMissingImports = true
reportMissingTypeStubs = false
pythonVersion = "3.8"
pythonPlatform = "Linux"

# pytest -----------------------------------------------------------------------
[tool.pytest.ini_options]
addopts = "--ignore=quickstart* --doctest-modules"


# build-system -----------------------------------------------------------------
[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
